name: slefhost

on: 
  pull_request:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  pull_request_review_comment:
    types: [created, edited]

jobs:
  run_test:
    if: |
        contains(github.event.comment.body, '[X] needs automatic test cases check') ||
        contains(github.event.comment.body, '@cocos-robot run test cases')
    runs-on: run-test-win01

    steps:
      - uses: octokit/request-action@v2.x
        id: find_pull_request
        with:
          route: GET /repos/cocos/cocos-engine/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse Pull Request
        id: parse_pull_request
        shell: pwsh
        run: |
          $pull_request = @"
          ${{ steps.find_pull_request.outputs.data }}
          "@ | ConvertFrom-Json
          Write-Host $pull_request
          Write-Host "::set-output name=pr_html_url::$($pull_request.html_url)"
          Write-Host "::set-output name=pr_number::$($pull_request.number)"
          Write-Host "::set-output name=pr_author::$($pull_request.user.login)"
          Write-Host "::set-output name=pr_head_ref::$($pull_request.head.ref)"
          Write-Host "::set-output name=pr_head_sha::$($pull_request.head.sha)"
          Write-Host "::set-output name=pr_base_ref::$($pull_request.base.ref)"
          Write-Host "::set-output name=pr_base_sha::$($pull_request.base.sha)"

      - name: Check pull request
        run: |
          echo "${{ steps.parse_pull_request.outputs.pr_head_ref }}"
          echo "${{ steps.parse_pull_request.outputs.pr_head_sha }}"
          echo "${{ steps.parse_pull_request.outputs.pr_base_ref }}"
          echo "${{ steps.parse_pull_request.outputs.pr_base_sha }}"

      - name: 'Checkout engine'
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.parse_pull_request.outputs.pr_base_sha }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.parse_pull_request.outputs.pr_head_sha }}

